               
pipeline {
    agent any
    
  environment {
        IMAGE_NAME = 'appjenkins'
        IMAGE_TAG = 'latest'
        DOCKERFILE_PATH = './AppForJenkins/Dockerfile'
    }



    stages {
        stage('Checkout'){
            steps{
                checkout scm
            }
        }
        stage('Restore') {
            steps {
                // Restore NuGet packages for the main project
                sh 'dotnet restore AppForJenkins/AppForJenkins.csproj'
            }
        }
        
        stage('Build') {
            steps {
                // Build the .NET project
                sh 'dotnet build AppForJenkins/AppForJenkins.csproj'
            }
        }

        stage('Test') {
            steps {
                // Run tests from the test project
                sh 'dotnet test AppJenkins.Tests/AppJenkins.Tests.csproj'
            }
        }

        stage('Docker Build') {
            steps {
                // Build Docker images if needed
            // sh 'ls AppForJenkins/'

            sh "sudo docker build -t $IMAGE_NAME:$IMAGE_TAG -f $DOCKERFILE_PATH ."
            }
        }
        stage("Docker Push"){
            steps{
                script{
                    docker.withRegistry('https://index.docker.io/v1/','docker_login'){
                        docker.image("${IMAGE_NAME}:${IMAGE_TAG}").push()
                }
            }
        }
        }

        stage('Container Run') {
            steps {
                // Start containers using Docker Compose
            // sh 'docker ps'
                sh "sudo docker run -p 5194:5194 $IMAGE_NAME:$IMAGE_TAG"
            }
        }

    }
}
